Hybrid Framework:
-----------------
Framework -> Organizing all our test files like automation test scripts and test cases, reports etc in proper structure.
                               (or)
             Set of rules which we can follow in a systematic way to achieve desired results.
Why should we use framework:
----------------------------
Two reasons:
1.Maintainability
2.Re-Usability

Username and password:
-----------------------
https://demo.guru99.com/v4/
User ID :	mngr509450
Password :	ajYbUre

Framework is devided into phases:
1.Implementation:
-----------------
-> Create Maven project
-> Update pom.xml
-> Create page objects
-> Create basic test cases
-> Add logs to test cases
-> Read comon values from properties file
-> Run test case on desired browser
-> Add extent report
-> Create data driven test cases
-> Adding new test case

2.Execution:
------------
-> Run test cases with maven pom.xml
   Usage of pom.xml:
  -----------------
  Dependencies -> Will download all jar files requied for our project
  Through pom we can run all our test cases
  plugins to run maven project
  maven-compiler-plugin
  maven-surefire-plugin
-> Run test cases through maven CLI(Command line interface)
   open cmd check maven is installed on your windows or not
   command : cd C:\Users\reddi\OneDrive\Desktop\Sulochana\Automation_workspace\Hybrid_Framework -> project location(pom)
   command: mvn clean install
-> Run test cases using run.bat
   open ur prjct folder and create run.bat file
   copy the above 2 commands and dbl clk on bat file , it will automatically run project
-> Run test cases using jenkins(using bat file)
   - Execute project using free style project(ru.bat) :
     -New item -> Item name(project name) -> Free style project -> Build -> give 2 commands
         cd C:\Users\reddi\OneDrive\Desktop\Sulochana\Automation_workspace\Hybrid_Framework
         mvn clean install
         save
     -Run project - clk on project and clk on build now
   - Execute maven project :
     -Have to add all maven plugins
     -Manage jenkins -> global tools configuration -> jdk -> jdk installation -> JAVA_HOME path
     -New item -> Item name(project name) -> Maven project -> Build -> complete path of pom.xml
         -> goals and options :clean install
         save

3.Maintenance:
---------------
-> Creating repository in git hub
-> Commit the project code in local repo
-> Push the code to remote repo from local.

System.getProperty("user.dir") -> It will only work on java
./ -> will work on both java and properties file

Data Provider:
--------------
Data provider method will provide the data to the test method.
It will take data from the excel and return data into two dimensionary and finally send it to the test method

If you want to run only failed test cases:
-------------------------------------------
test-output -> faild.xml file -> run it

Maven:
-----
Maven is a build tool, but there are some features we can use for our testing and development
Devops teams will use maven

Jenkins -> Is an integration tool


















